package org.jboss.windup.rules.apps.legacy.java;

import java.util.ArrayList;
import java.util.List;

import org.jboss.windup.config.RulePhase;
import org.jboss.windup.config.WindupRuleProvider;
import org.jboss.windup.config.metadata.RuleMetadata;
import org.jboss.windup.graph.GraphContext;
import org.jboss.windup.rules.apps.java.blacklist.BlackListRegex;
import org.jboss.windup.rules.apps.java.blacklist.JavaClassification;
import org.jboss.windup.rules.apps.java.blacklist.JavaScanner;
import org.jboss.windup.rules.apps.java.blacklist.Types;
import org.jboss.windup.rules.apps.java.scan.ast.TypeReferenceLocation;
import org.ocpsoft.rewrite.config.Configuration;
import org.ocpsoft.rewrite.config.ConfigurationBuilder;
import org.ocpsoft.rewrite.context.Context;

public class JDKConfig extends WindupRuleProvider
{

    @Override
    public RulePhase getPhase()
    {
        return RulePhase.DISCOVERY;
    }

    @Override
    public void enhanceMetadata(Context context)
    {
        context.put(RuleMetadata.CATEGORY, "Java");
    }

    // @formatter:off
    @Override
    public Configuration getConfiguration(GraphContext context)
    {
        List<JavaClassification> classifications = new ArrayList<JavaClassification>();
        List<BlackListRegex> hints = new ArrayList<BlackListRegex>();
        
        classifications.add(new JavaClassification(getID(), "Java Classloader, must be migrated.", "java.lang.ClassLoader$", 1, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.AttributeList", "Deprecated By JDK 6. This interface has been replaced by the SAX2 Attributes interface, which includes Namespace support.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "java.security.Certificate", "Deprecated By JDK 6. A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.DocumentHandler", "Deprecated By JDK 6. This interface has been replaced by the SAX2 ContentHandler interface, which includes Namespace support.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynAny", "Deprecated By JDK 6. Use the new DynAny instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynArray", "Deprecated By JDK 6. Use the new DynArray instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynEnum", "Deprecated By JDK 6. Use the new DynEnum instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynFixed", "Deprecated By JDK 6. Use the new DynFixed instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynSequence", "Deprecated By JDK 6. Use the new DynSequence instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynStruct", "Deprecated By JDK 6. Use the new DynStruct instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynUnion", "Deprecated By JDK 6. Use the new DynUnion instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynValue", "Deprecated By JDK 6. Use the new DynValue instead", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LoaderHandler", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.Parser", "Deprecated By JDK 6. This interface has been replaced by the SAX2 XMLReader interface, which includes Namespace support.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.registry.RegistryHandler", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall", "Deprecated By JDK 6. no replacement.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Skeleton", "Deprecated By JDK 6. no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator", "Deprecated By JDK 6. since JAXB 2.0", 0, Types.add(TypeReferenceLocation.INHERITANCE)));
        hints.add(new BlackListRegex(getID(), "javax.accessibility.AccessibleResourceBundle", "Deprecated By JDK 6. This class is deprecated as of version 1.3 of the Java Platform.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.helpers.AttributeListImpl", "Deprecated By JDK 6. This class implements a deprecated interface, AttributeList; that interface has been replaced by Attributes, which is implemented in the AttributesImpl helper class.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.management.DefaultLoaderRepository", "Deprecated By JDK 6. Use MBeanServer.getClassLoaderRepository() instead.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.management.loading.DefaultLoaderRepository", "Deprecated By JDK 6. Use MBeanServer.getClassLoaderRepository()} instead.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.DefaultTextUI", "Deprecated By JDK 6.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynamicImplementation", "Deprecated By JDK 6. org.omg.CORBA.DynamicImplementation", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.HandlerBase", "Deprecated By JDK 6. This class works with the deprecated DocumentHandler interface. It has been replaced by the SAX2 DefaultHandler class.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.security.Identity", "Deprecated By JDK 6. This class is no longer used. Its functionality has been replaced by java.security.KeyStore, the java.security.cert package, and java.security.Principal.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.security.IdentityScope", "Deprecated By JDK 6. This class is no longer used. Its functionality has been replaced by java.security.KeyStore, the java.security.cert package, and java.security.Principal.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.io.LineNumberInputStream", "Deprecated By JDK 6. This class incorrectly assumes that bytes adequately represent characters. As of JDK 1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup", "Deprecated By JDK 6. As of Java 2 platform v1.4.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Operation", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.xml.sax.helpers.ParserFactory", "Deprecated By JDK 6. This class works with the deprecated Parser interface.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.Principal", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.PrincipalHolder", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.security.Signer", "Deprecated By JDK 6. This class is no longer used. Its functionality has been replaced by java.security.KeyStore, the java.security.cert package, and java.security.Principal.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.xml.soap.SOAPElementFactory", "Deprecated By JDK 6. Use javax.xml.soap.SOAPFactory for creating SOAPElements.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.io.StringBufferInputStream", "Deprecated By JDK 6. This class does not properly convert characters into bytes. As of JDK 1.1, the preferred way to create a stream from a string is via the StringReader class.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.TableView.TableCell", "Deprecated By JDK 6. A table cell can now be any View implementation.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.security.auth.Policy", null, 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.rmi.RMISecurityException", "Deprecated By JDK 6. Use SecurityException instead. Application code should never directly reference this class, and RMISecurityManager no longer throws this subclass of java.lang.SecurityException.", 0, Types.add(TypeReferenceLocation.IMPORT)));
        hints.add(new BlackListRegex(getID(), "java.rmi.ServerRuntimeException", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.IMPORT)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.SkeletonMismatchException", "Deprecated By JDK 6. no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.", 0, Types.add(TypeReferenceLocation.IMPORT)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.SkeletonNotFoundException", "Deprecated By JDK 6. no replacement. Skeletons are no longer required for remote method calls in the Java 2 platform v1.2 and greater.", 0, Types.add(TypeReferenceLocation.IMPORT)));
        hints.add(new BlackListRegex(getID(), "javax.jws.soap.InitParam", "Deprecated By JDK 6. As of JSR-181 2.0 with no replacement.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.jws.soap.SOAPMessageHandler", "Deprecated By JDK 6. As of JSR-181 2.0 with no replacement.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.jws.soap.SOAPMessageHandlers", "Deprecated By JDK 6. As of JSR-181 2.0 with no replacement.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.management.openmbean.OpenType.ALLOWED_CLASSNAMES", "Deprecated By JDK 6. Use ALLOWED_CLASSNAMES_LIST instead.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.Monitor.alreadyNotified", "Deprecated By JDK 6. equivalent to Monitor.alreadyNotifieds[0].", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JViewport.backingStore", "Deprecated By JDK 6. As of Java 2 platform v1.3", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicDesktopPaneUI.closeKey", "Deprecated By JDK 6. As of 1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.sql.rowset.CachedRowSet.COMMIT_ON_ACCEPT_CHANGES", "Deprecated By JDK 6. Because this field is final (it is part of an interface), its value cannot be changed.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.CROSSHAIR_CURSOR", "Deprecated By JDK 6. replaced by Cursor.CROSSHAIR_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.Monitor.dbgTag", "Deprecated By JDK 6. No replacement.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.DEFAULT_CURSOR", "Deprecated By JDK 6. replaced by Cursor.DEFAULT_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JRootPane.defaultPressAction", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JRootPane.defaultReleaseAction", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicToolBarUI.downKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.downKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicTabbedPaneUI.downKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.E_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.E_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.endKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.util.logging.Logger.global", "Deprecated By JDK 6. Initialization of this field is prone to deadlocks. The field must be initialized by the Logger class initialization which may cause deadlocks with the LogManager class initialization. In such cases two class initialization wait for each other to complete. The preferred way to get the global logger object is via the call Logger.getGlobal(). For compatibility with old JDK versions where the Logger.getGlobal() is not available use the call Logger.getLogger(Logger.GLOBAL_LOGGER_NAME) or Logger.getLogger(\"global\").", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.HAND_CURSOR", "Deprecated By JDK 6. replaced by Cursor.HAND_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.homeKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.net.HttpURLConnection.HTTP_SERVER_ERROR", "Deprecated By JDK 6. it is misplaced and shouldn't have existed.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.inCheck", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicToolBarUI.leftKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.leftKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicTabbedPaneUI.leftKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicDesktopPaneUI.maximizeKey", "Deprecated By JDK 6. As of 1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicDesktopPaneUI.minimizeKey", "Deprecated By JDK 6. As of 1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.MOVE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.MOVE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.N_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.N_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicDesktopPaneUI.navigateKey", "Deprecated By JDK 6. As of 1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicDesktopPaneUI.navigateKey2", "Deprecated By JDK 6. As of 1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.NE_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.NE_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.NW_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.NW_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicInternalFrameUI.openMenuKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.datatransfer.DataFlavor.plainTextFlavor", "Deprecated By JDK 6. as of 1.3. Use DataFlavor.getReaderForText(Transferable) instead of Transferable.getTransferData(DataFlavor.plainTextFlavor).", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Cursor.predefined", "Deprecated By JDK 6. As of JDK version 1.7, the Cursor.getPredefinedCursor(int) method should be used instead.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.html.FormView.RESET", "Deprecated By JDK 6. As of 1.3, value comes from UIManager UIManager property FormView.resetButtonText", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.table.TableColumn.resizedPostingDisableCount", "Deprecated By JDK 6. as of Java 2 platform v1.3", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicToolBarUI.rightKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.rightKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicTabbedPaneUI.rightKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.S_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.S_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.SE_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.SE_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.imageio.spi.ImageReaderSpi.STANDARD_INPUT_TYPE", "Deprecated By JDK 6. Instead of using this field, directly create the equivalent array { ImageInputStream.class }.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.imageio.spi.ImageWriterSpi.STANDARD_OUTPUT_TYPE", "Deprecated By JDK 6. Instead of using this field, directly create the equivalent array { ImageOutputStream.class }.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.html.FormView.SUBMIT", "Deprecated By JDK 6. As of 1.3, value now comes from UIManager property FormView.submitButtonText", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.lang.Character.UnicodeBlock.SURROGATES_AREA", "Deprecated By JDK 6. As of J2SE 5, use Character.UnicodeBlock.HIGH_SURROGATES, Character.UnicodeBlock.HIGH_PRIVATE_USE_SURROGATES, and Character.UnicodeBlock.LOW_SURROGATES. These new constants match the block definitions of the Unicode Standard. The Character.UnicodeBlock.of(char) and Character.UnicodeBlock.of(int) methods return the new constants, not SURROGATES_AREA.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.SW_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.SW_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.TEXT_CURSOR", "Deprecated By JDK 6. replaced by Cursor.TEXT_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicToolBarUI.upKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.upKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicTabbedPaneUI.upKey", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.W_RESIZE_CURSOR", "Deprecated By JDK 6. replaced by Cursor.W_RESIZE_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.WAIT_CURSOR", "Deprecated By JDK 6. replaced by Cursor.WAIT_CURSOR.", 0, Types.add(TypeReferenceLocation.TYPE)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.action\\(Event, Object\\)", "Deprecated By JDK 6. As of JDK version 1.1, should register this component as ActionListener on component which fires action events.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.addItem\\(String\\)", "Deprecated By JDK 6. replaced by add(String).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.addItem\\(String, int\\)", "Deprecated By JDK 6. replaced by add(String, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.BorderLayout.addLayoutComponent\\(String, Component\\)", "Deprecated By JDK 6. replaced by addLayoutComponent(Component, Object).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.CardLayout.addLayoutComponent\\(String, Component\\)", "Deprecated By JDK 6. replaced by addLayoutComponent(Component, Object).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.allowsMultipleSelections\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by isMultipleMode().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.ThreadGroup.allowThreadSuspension\\(boolean\\)", "Deprecated By JDK 6. The definition of this call depends on ThreadGroup.suspend(), which is deprecated. Further, the behavior of this call was never specified.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.appendText\\(String\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by append(String).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.applyResourceBundle\\(ResourceBundle\\)", "Deprecated By JDK 6. As of J2SE 1.4, replaced by Component.applyComponentOrientation.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.applyResourceBundle\\(String\\)", "Deprecated By JDK 6. As of J2SE 1.4, replaced by Component.applyComponentOrientation.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.bounds\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getBounds().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.checkMulticast\\(InetAddress, byte\\)", "Deprecated By JDK 6. se #checkPermission(java.security.Permission) instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.classDepth\\(String\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.classLoaderDepth\\(\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.clear\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by removeAll().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.image.renderable.RenderContext.concetenateTransform\\(AffineTransform\\)", "Deprecated By JDK 6. replaced by concatenateTransform(AffineTransform).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.countComponents\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getComponentCount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Menu.countItems\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getItemCount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Choice.countItems\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getItemCount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.countItems\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getItemCount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuBar.countMenus\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMenuCount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.countStackFrames\\(\\)", "Deprecated By JDK 6. The definition of this call depends on Thread.suspend(), which is deprecated. Further, the results of this call were never well-defined.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_basic_dyn_any(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_any(Any)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_array(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_enum(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_sequence(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_struct(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_dyn_union(TypeCode)", "Deprecated By JDK 6. Use the new DynAnyFactory API instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.create_recursive_sequence_tc(int, int)", "Deprecated By JDK 6. Use a combination of create_recursive_tc and create_sequence_tc instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.soap.SOAPElementFactory.create\\(Name\\)", "Deprecated By JDK 6. Use javax.xml.soap.SOAPFactory.createElement(javax.xml.soap.Name) instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.soap.SOAPElementFactory.create\\(String\\)", "Deprecated By JDK 6. Use javax.xml.soap.SOAPFactory.createElement(String localName) instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.soap.SOAPElementFactory.create\\(String, String, String\\)", "Deprecated By JDK 6. Use javax.xml.soap.SOAPFactory.createElement(String localName, String prefix, String uri) instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JTable.createScrollPaneForTable\\(JTable\\)", "Deprecated By JDK 6. As of Swing version 1.0.2, replaced by new JScrollPane(aTable).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.TableView.createTableCell\\(Element\\)", "Deprecated By JDK 6. Table cells can now be any arbitrary View implementation and should be produced by the ViewFactory rather than the table.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.JAXBContext.createValidator\\(\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.currentClassLoader\\(\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.currentLoadedClass\\(\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.URLDecoder.decode\\(String\\)", "Deprecated By JDK 6. The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.ClassLoader.defineClass\\(byte\\[\\], int, int\\)", "Deprecated By JDK 6. Replaced by defineClass(String, byte\\[\\], int, int)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.delItem\\(int\\)", "Deprecated By JDK 6. replaced by remove(String) and remove(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.delItems\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, Not for public use in the future. This method is expected to be retained only as a package private method.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.deliverEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent e)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.deliverEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent e).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.MBeanServer.deserialize\\(ObjectName, byte\\[\\]\\)", "Deprecated By JDK 6. Use getClassLoaderFor to obtain the appropriate class loader for deserialization.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.MBeanServer.deserialize\\(String, byte\\[\\]\\)", "Deprecated By JDK 6. Use MBeanServer.getClassLoaderRepository() to obtain the class loader repository and use it to deserialize.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.MBeanServer.deserialize\\(String, ObjectName, byte\\[\\]\\)", "Deprecated By JDK 6. Use getClassLoader to obtain the class loader for deserialization.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.destroy\\(\\)", "Deprecated By JDK 6. This method was originally designed to destroy this thread without any cleanup. Any monitors it held would have remained locked. However, the method was never implemented. If if were to be implemented, it would be deadlock-prone in much the manner of Thread.suspend(). If the target thread held a lock protecting a critical system resource when it was destroyed, no thread could ever access this resource again. If another thread ever attempted to lock this resource, deadlock would result. Such deadlocks typically manifest themselves as \"frozen\" processes. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.disable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuItem.disable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.disable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by java.awt.Component.setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.table.TableColumn.disableResizedPosting\\(\\)", "Deprecated By JDK 6. as of Java 2 platform v1.3", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.FocusManager.disableSwingFocusManager\\(\\)", "Deprecated By JDK 6. as of 1.4, replaced by KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Skeleton.dispatch\\(Remote, RemoteCall, int, long\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.done\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteRef.done\\(RemoteCall\\)", "Deprecated By JDK 6. 1.2 style stubs no longer use this method. Instead of using a sequence of method calls to the remote reference (newCall, invoke, and done), a stub uses a single method, invoke(Remote, Method, Object\\[\\], int), on the remote reference to carry out parameter marshalling, remote method executing and unmarshalling of the return value.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.metal.MetalComboBoxUI.editablePropertyChanged\\(PropertyChangeEvent\\)", "Deprecated By JDK 6. As of Java 2 platform v1.4.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.enable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuItem.enable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.enable\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by java.awt.Component.setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.enable\\(boolean\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuItem.enable\\(boolean\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEnabled(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.table.TableColumn.enableResizedPosting\\(\\)", "Deprecated By JDK 6. as of Java 2 platform v1.3", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.URLEncoder.encode\\(String\\)", "Deprecated By JDK 6. The resulting string may vary depending on the platform's default encoding. Instead, use the encode(String,String) method to specify the encoding.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.security.SignatureSpi.engineGetParameter\\(String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.security.SignatureSpi.engineSetParameter\\(String, Object\\)", "Deprecated By JDK 6. Replaced by engineSetParameter.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.datatransfer.DataFlavor.equals\\(String\\)", "Deprecated By JDK 6. As inconsistent with hashCode() contract, use isMimeTypeEqual(String) instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ServerRequest.except\\(Any\\)", "Deprecated By JDK 6. use set_exception()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.executeCall\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.Any.extract_Principal()", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.SwingUtilities.findFocusOwner\\(Component\\)", "Deprecated By JDK 6. As of 1.4, replaced by KeyboardFocusManager.getFocusOwner().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ORB.get_current()", "Deprecated By JDK 6. use resolve_initial_references.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.security.Security.getAlgorithmProperty\\(String, String\\)", "Deprecated By JDK 6. This method used to return the value of a proprietary property in the master file of the \"SUN\" Cryptographic Service Provider in order to determine how to parse algorithm-specific parameters. Use the new provider-based and algorithm-independent AlgorithmParameters and KeyFactory engine classes (introduced in the J2SE version 1.2 platform) instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.CallableStatement.getBigDecimal\\(int, int\\)", "Deprecated By JDK 6. use getBigDecimal(int parameterIndex) or getBigDecimal(String parameterName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.ResultSet.getBigDecimal\\(int, int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.ResultSet.getBigDecimal\\(String, int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Polygon.getBoundingBox\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getBounds().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.String.getBytes\\(int, int, byte\\[\\], int\\)", "Deprecated By JDK 6. This method does not properly convert characters into bytes. As of JDK 1.1, the preferred way to do this is via the String.getBytes() method, which uses the platform's default charset.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Graphics.getClipRect\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getClipBounds().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JMenuBar.getComponentAtIndex\\(int\\)", "Deprecated By JDK 6. replaced by getComponent(int i)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JPopupMenu.getComponentAtIndex\\(int\\)", "Deprecated By JDK 6. replaced by Container.getComponent(int)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.CheckboxGroup.getCurrent\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getSelectedCheckbox().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.getCursorType\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Component.getCursor().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.getDate\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getDate\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.DAY_OF_MONTH).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.getDay\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getDay\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.DAY_OF_WEEK).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.URLConnection.getDefaultRequestProperty\\(String\\)", "Deprecated By JDK 6. The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.getDefaultStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.GaugeMonitorMBean.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by GaugeMonitorMBean.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitor.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitor.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.StringMonitor.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by StringMonitor.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.StringMonitorMBean.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by StringMonitorMBean.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.GaugeMonitor.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by GaugeMonitor.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitorMBean.getDerivedGauge\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitorMBean.getDerivedGauge(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by GaugeMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitor.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by StringMonitor.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.StringMonitorMBean.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by StringMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.GaugeMonitor.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by GaugeMonitor.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3, instead set the border on the divider.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.getEventHandler\\(\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Toolkit.getFontList\\(\\)", "Deprecated By JDK 6. see GraphicsEnvironment.getAvailableFontFamilyNames()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.LabelView.getFontMetrics\\(\\)", "Deprecated By JDK 6. FontMetrics are not used for glyph rendering when running in the JDK.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Toolkit.getFontMetrics\\(Font\\)", "Deprecated By JDK 6. As of JDK version 1.2, replaced by the Font method getLineMetrics.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Toolkit.getFontPeer\\(String, int\\)", "Deprecated By JDK 6. see java.awt.GraphicsEnvironment#getAllFonts", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.getHours\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getHours\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.HOUR_OF_DAY).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.getInCheck\\(\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.getInputStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.KeyStroke.getKeyStroke\\(char, boolean\\)", "Deprecated By JDK 6. use getKeyStroke(char)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.AbstractButton.getLabel\\(\\)", "Deprecated By JDK 6. Replaced by getText", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Scrollbar.getLineIncrement\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getUnitIncrement().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Runtime.getLocalizedInputStream\\(InputStream\\)", "Deprecated By JDK 6. As of JDK 1.1, the preferred way to translate a byte stream in the local encoding into a character stream in Unicode is via the InputStreamReader and BufferedReader classes.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Runtime.getLocalizedOutputStream\\(OutputStream\\)", "Deprecated By JDK 6. As of JDK 1.1, the preferred way to translate a Unicode character stream into a byte stream in the local encoding is via the OutputStreamWriter, BufferedWriter, and PrintWriter classes.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.DriverManager.getLogStream\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.FontMetrics.getMaxDecent\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1.1, replaced by getMaxDescent().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JRootPane.getMenuBar\\(\\)", "Deprecated By JDK 6. As of Swing version 1.0.3 replaced by getJMenuBar().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JInternalFrame.getMenuBar\\(\\)", "Deprecated By JDK 6. As of Swing version 1.0.3, replaced by getJMenuBar().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.getMinutes\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getMinutes\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.MINUTE).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.getMonth\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getMonth\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.MONTH).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.getNextFocusableComponent\\(\\)", "Deprecated By JDK 6. As of 1.4, replaced by FocusTraversalPolicy.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.MonitorMBean.getObservedObject\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by MonitorMBean.getObservedObjects()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.Monitor.getObservedObject\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by Monitor.getObservedObjects()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Operation.getOperation\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Skeleton.getOperations\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.ComponentOrientation.getOrientation\\(ResourceBundle\\)", "Deprecated By JDK 6. As of J2SE 1.4, use ComponentOrientation.getOrientation(java.util.Locale).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.getOutputStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.getOutputStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Scrollbar.getPageIncrement\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getBlockIncrement().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.security.Signature.getParameter\\(String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuComponent.getPeer\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, programs should not directly manipulate peers.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.getPeer\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, programs should not directly manipulate peers; replaced by boolean isDisplayable().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Font.getPeer\\(\\)", "Deprecated By JDK 6. Font rendering is now platform independent.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.getProperty\\(String\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.getResultStream\\(boolean\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.getSeconds\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getSeconds\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.SECOND).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RMIClassLoader.getSecurityContext\\(ClassLoader\\)", "Deprecated By JDK 6. no replacement. As of the Java 2 platform v1.2, RMI no longer uses this method to obtain a class loader's security context.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LoaderHandler.getSecurityContext\\(ClassLoader\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JList.getSelectedValues\\(\\)", "Deprecated By JDK 6. As of JDK 1.7, replaced by JList.getSelectedValuesList()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JPasswordField.getText\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.2, replaced by getPassword.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JPasswordField.getText\\(int, int\\)", "Deprecated By JDK 6. As of Java 2 platform v1.2, replaced by getPassword.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitor.getThreshold\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitor.getThreshold(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitorMBean.getThreshold\\(\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitorMBean.getThreshold(ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getTimezoneOffset\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by -(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.DatagramSocketImpl.getTTL\\(\\)", "Deprecated By JDK 6. use getTimeToLive instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.MulticastSocket.getTTL\\(\\)", "Deprecated By JDK 6. use the getTimeToLive method instead, which returns an int instead of a byte.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.ResultSet.getUnicodeStream\\(int\\)", "Deprecated By JDK 6. use getCharacterStream in place of getUnicodeStream", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.ResultSet.getUnicodeStream\\(String\\)", "Deprecated By JDK 6. use getCharacterStream instead", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.ScrollPaneLayout.getViewportBorderBounds\\(JScrollPane\\)", "Deprecated By JDK 6. As of JDK version Swing1.1 replaced by JScrollPane.getViewportBorderBounds().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Scrollbar.getVisible\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getVisibleAmount().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.getYear\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.getYear\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.get(Calendar.YEAR)- 1900.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.gotFocus\\(Event, Object\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processFocusEvent(FocusEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.handleEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1 replaced by processEvent(AWTEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.hide\\(\\)", "Deprecated By JDK 6. As of JDK version 1.5, replaced by Window.setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.hide\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Dialog.hide\\(\\)", "Deprecated By JDK 6. As of JDK version 1.5, replaced by setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.inClass\\(String\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.SecurityManager.inClassLoader\\(\\)", "Deprecated By JDK 6. This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.Any.insert_Principal(Principal)", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertAtBoundry\\(JEditorPane, HTMLDocument, int, Element, String, HTML.Tag, HTML.Tag\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3, use insertAtBoundary", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.insertText\\(String, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by insert(String, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.insets\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getInsets().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.inside\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by contains(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Rectangle.inside\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by contains(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Polygon.inside\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by contains(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteRef.invoke\\(RemoteCall\\)", "Deprecated By JDK 6. 1.2 style stubs no longer use this method. Instead of using a sequence of method calls to the remote reference (newCall, invoke, and done), a stub uses a single method, invoke(Remote, Method, Object\\[\\], int), on the remote reference to carry out parameter marshalling, remote method executing and unmarshalling of the return value.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.DynamicImplementation.invoke\\(ServerRequest\\)", "Deprecated By JDK 6. Deprecated by Portable Object Adapter", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JViewport.isBackingStoreEnabled\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3, replaced by getScrollMode().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.FocusManager.isFocusManagerEnabled\\(\\)", "Deprecated By JDK 6. As of 1.4, replaced by KeyboardFocusManager.getDefaultFocusTraversalPolicy()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.isFocusTraversable\\(\\)", "Deprecated By JDK 6. As of 1.4, replaced by isFocusable().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Character.isJavaLetter\\(char\\)", "Deprecated By JDK 6. Replaced by isJavaIdentifierStart(char).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Character.isJavaLetterOrDigit\\(char\\)", "Deprecated By JDK 6. Replaced by isJavaIdentifierPart(char).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.isManagingFocus\\(\\)", "Deprecated By JDK 6. As of 1.4, replaced by Component.setFocusTraversalKeys(int, Set) and Container.setFocusCycleRoot(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.isSelected\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by isIndexSelected(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Character.isSpace\\(char\\)", "Deprecated By JDK 6. Replaced by isWhitespace(char).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.dgc.VMID.isUnique\\(\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Unmarshaller.isValidating\\(\\)", "Deprecated By JDK 6. since JAXB2.0, please see Unmarshaller.getSchema()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.keyDown\\(Event, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processKeyEvent(KeyEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.keyUp\\(Event, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processKeyEvent(KeyEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.layout\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by doLayout().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.layout\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by doLayout().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.ScrollPane.layout\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by doLayout().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RMIClassLoader.loadClass\\(String\\)", "Deprecated By JDK 6. replaced by loadClass(String,String) method", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LoaderHandler.loadClass\\(String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LoaderHandler.loadClass\\(URL, String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.locate\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getComponentAt(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.locate\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getComponentAt(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.location\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getLocation().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.log\\(String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.lostFocus\\(Event, Object\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processFocusEvent(FocusEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.minimumSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.minimumSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextField.minimumSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.minimumSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.minimumSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextField.minimumSize\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.minimumSize\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.minimumSize\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getMinimumSize(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.View.modelToView\\(int, Shape\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseDown\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseDrag\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseEnter\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseExit\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseMove\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.mouseUp\\(Event, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.move\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setLocation(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Rectangle.move\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setLocation(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.Principal.name\\(\\)", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.Principal.name\\(byte\\[\\]\\)", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteRef.newCall\\(RemoteObject, Operation\\[\\], int, long\\)", "Deprecated By JDK 6. 1.2 style stubs no longer use this method. Instead of using a sequence of method calls on the stub's the remote reference (newCall, invoke, and done), a stub uses a single method, invoke(Remote, Method, Object\\[\\], int), on the remote reference to carry out parameter marshalling, remote method executing and unmarshalling of the return value.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.stream.XMLInputFactory.newInstance\\(String, ClassLoader\\)", "Deprecated By JDK 6. This method has been deprecated to maintain API consistency. All newInstance methods have been replaced with corresponding newFactory methods. The replacement XMLInputFactory.newFactory(java.lang.String, java.lang.ClassLoader) method defines no changes in behavior.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.stream.XMLEventFactory.newInstance\\(String, ClassLoader\\)", "Deprecated By JDK 6. This method has been deprecated to maintain API consistency. All newInstance methods have been replaced with corresponding newFactory methods. The replacement XMLEventFactory.newFactory(java.lang.String, java.lang.ClassLoader) method defines no changes in behavior.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.stream.XMLOutputFactory.newInstance\\(String, ClassLoader\\)", "Deprecated By JDK 6. This method has been deprecated because it returns an instance of XMLInputFactory, which is of the wrong class. Use the new method XMLOutputFactory.newFactory(java.lang.String, java.lang.ClassLoader) instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.nextFocus\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by transferFocus().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.datatransfer.DataFlavor.normalizeMimeType\\(String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.activation.ActivationDataFlavor.normalizeMimeType\\(String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.datatransfer.DataFlavor.normalizeMimeTypeParameter\\(String, String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.activation.ActivationDataFlavor.normalizeMimeTypeParameter\\(String, String\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.tree.DefaultTreeSelectionModel.notifyPathChange\\(Vector, TreePath\\)", "Deprecated By JDK 6. As of JDK version 1.7", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ServerRequest.op_name()", "Deprecated By JDK 6. use operation()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ServerRequest.params\\(NVList\\)", "Deprecated By JDK 6. use the method arguments", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.parse\\(String\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by DateFormat.parse(String s).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.parseLevel\\(String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuComponent.postEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by dispatchEvent.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.MenuContainer.postEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1 replaced by dispatchEvent(AWTEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.postEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1 replaced by dispatchEvent(AWTEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.postEvent\\(Event\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by dispatchEvent(AWTEvent).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.image.renderable.RenderContext.preConcetenateTransform\\(AffineTransform\\)", "Deprecated By JDK 6. replaced by preConcatenateTransform(AffineTransform).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.preferredSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Container.preferredSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextField.preferredSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.preferredSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.preferredSize\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextField.preferredSize\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.preferredSize\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.preferredSize\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getPreferredSize(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.portable.InputStream.read_Principal()", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.io.ObjectInputStream.readLine\\(\\)", "Deprecated By JDK 6. This method does not properly convert bytes to characters. see DataInputStream for the details and alternatives.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.registry.RegistryHandler.registryImpl\\(int\\)", "Deprecated By JDK 6. no replacement. As of the Java 2 platform v1.2, RMI no longer uses the RegistryHandler to obtain the registry's implementation.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.registry.RegistryHandler.registryStub\\(String, int\\)", "Deprecated By JDK 6. no replacement. As of the Java 2 platform v1.2, RMI no longer uses the RegistryHandler to obtain the registry's stub.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.releaseInputStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteCall.releaseOutputStream\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.metal.MetalComboBoxUI.removeListeners\\(\\)", "Deprecated By JDK 6. As of Java 2 platform v1.4.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextArea.replaceText\\(String, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by replaceRange(String, int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.requestDefaultFocus\\(\\)", "Deprecated By JDK 6. As of 1.4, replaced by FocusTraversalPolicy.getDefaultComponent(Container).requestFocus()", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.reshape\\(int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setBounds(int, int, int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.reshape\\(int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setBounds(int, int, int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Rectangle.reshape\\(int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setBounds(int, int, int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.resize\\(Dimension\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setSize(Dimension).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.resize\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setSize(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Rectangle.resize\\(int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setSize(int, int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.ServerRequest.result\\(Any\\)", "Deprecated By JDK 6. use the method set_result", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.ThreadGroup.resume\\(\\)", "Deprecated By JDK 6. This method is used solely in conjunction with Thread.suspend and ThreadGroup.suspend, both of which have been deprecated, as they are inherently deadlock-prone. See Thread.suspend() for details.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.resume\\(\\)", "Deprecated By JDK 6. This method exists solely for use with Thread.suspend(), which has been deprecated because it is deadlock-prone. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.System.runFinalizersOnExit\\(boolean\\)", "Deprecated By JDK 6. This method is inherently unsafe. It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic behavior or deadlock.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Runtime.runFinalizersOnExit\\(boolean\\)", "Deprecated By JDK 6. This method is inherently unsafe. It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic behavior or deadlock.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Properties.save\\(OutputStream, String\\)", "Deprecated By JDK 6. This method does not throw an IOException if an I/O error occurs while saving the property list. The preferred way to save a properties list is via the store(OutputStream out, String comments) method or the storeToXML(OutputStream os, String comment) method.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.MulticastSocket.send\\(DatagramPacket, byte\\)", "Deprecated By JDK 6. Use the following code or its equivalent instead: ...... int ttl = mcastSocket.getTimeToLive(); mcastSocket.setTimeToLive(newttl); mcastSocket.send(p); mcastSocket.setTimeToLive(ttl); ......", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JViewport.setBackingStoreEnabled\\(boolean\\)", "Deprecated By JDK 6. As of Java 2 platform v1.3, replaced by setScrollMode().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.CheckboxGroup.setCurrent\\(Checkbox\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setSelectedCheckbox(Checkbox).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Frame.setCursor\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Component.setCursor(Cursor).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.setDate\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setDate\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.DAY_OF_MONTH, int date).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.URLConnection.setDefaultRequestProperty\\(String, String\\)", "Deprecated By JDK 6. The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.setDefaultStream\\(PrintStream\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.TextField.setEchoCharacter\\(char\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setEchoChar(char).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.setEventHandler\\(ValidationEventHandler\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.setHours\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setHours\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.HOUR_OF_DAY, int hours).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.AbstractButton.setLabel\\(String\\)", "Deprecated By JDK 6. Replaced by setText(text)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Scrollbar.setLineIncrement\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setUnitIncrement(int).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.DriverManager.setLogStream\\(PrintStream\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.AttributeValueExp.setMBeanServer\\(MBeanServer\\)", "Deprecated By JDK 6. This method has no effect. The MBean Server used to obtain an attribute value is QueryEval.getMBeanServer().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.ValueExp.setMBeanServer\\(MBeanServer\\)", "Deprecated By JDK 6. This method is not needed because a ValueExp can access the MBean server in which it is being evaluated by using QueryEval.getMBeanServer().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.StringValueExp.setMBeanServer\\(MBeanServer\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JRootPane.setMenuBar\\(JMenuBar\\)", "Deprecated By JDK 6. As of Swing version 1.0.3 replaced by setJMenuBar(JMenuBar menu).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JInternalFrame.setMenuBar\\(JMenuBar\\)", "Deprecated By JDK 6. As of Swing version 1.0.3 replaced by setJMenuBar(JMenuBar m).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.setMinutes\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setMinutes\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.MINUTE, int minutes).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.event.KeyEvent.setModifiers\\(int\\)", "Deprecated By JDK 6. as of JDK1.1.4", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.setMonth\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setMonth\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.MONTH, int month).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.List.setMultipleSelections\\(boolean\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setMultipleMode(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.setNextFocusableComponent\\(Component\\)", "Deprecated By JDK 6. As of 1.4, replaced by FocusTraversalPolicy", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.MonitorMBean.setObservedObject\\(ObjectName\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by MonitorMBean.addObservedObject(javax.management.ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.Monitor.setObservedObject\\(ObjectName\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by Monitor.addObservedObject(javax.management.ObjectName)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.setOutputStream\\(OutputStream\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Scrollbar.setPageIncrement\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setBlockIncrement().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.security.Signature.setParameter\\(String, Object\\)", "Deprecated By JDK 6. Use setParameter.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.setProperty\\(String, Object\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.RemoteStub.setRef\\(RemoteStub, RemoteRef\\)", "Deprecated By JDK 6. no replacement. The setRef method is not needed since RemoteStubs can be created with the RemoteStub(RemoteRef) constructor.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date.setSeconds\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setSeconds\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.SECOND, int seconds).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitor.setThreshold\\(Number\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitor.setInitThreshold(java.lang.Number)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.monitor.CounterMonitorMBean.setThreshold\\(Number\\)", "Deprecated By JDK 6. As of JMX 1.2, replaced by CounterMonitorMBean.setInitThreshold(java.lang.Number)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.DatagramSocketImpl.setTTL\\(byte\\)", "Deprecated By JDK 6. use setTimeToLive instead.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.MulticastSocket.setTTL\\(byte\\)", "Deprecated By JDK 6. use the setTimeToLive method instead, which uses int instead of byte as the type for ttl.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.PreparedStatement.setUnicodeStream\\(int, InputStream, int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.sql.rowset.BaseRowSet.setUnicodeStream\\(int, InputStream, int\\)", "Deprecated By JDK 6. getCharacterStream should be used in its place", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.net.URLStreamHandler.setURL\\(URL, String, String, int, String, String\\)", "Deprecated By JDK 6. Use setURL(URL, String, String, int, String, String, String, String);", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Unmarshaller.setValidating\\(boolean\\)", "Deprecated By JDK 6. since JAXB2.0, please see Unmarshaller.setSchema(javax.xml.validation.Schema)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time.setYear\\(int\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.setYear\\(int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(Calendar.YEAR, year + 1900).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Window.show\\(\\)", "Deprecated By JDK 6. As of JDK version 1.5, replaced by Window.setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.show\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Dialog.show\\(\\)", "Deprecated By JDK 6. As of JDK version 1.5, replaced by setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.show\\(boolean\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by setVisible(boolean).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.awt.Component.size\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by getSize().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JTable.sizeColumnsToFit\\(boolean\\)", "Deprecated By JDK 6. As of Swing version 1.0.3, replaced by doLayout().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.ThreadGroup.stop\\(\\)", "Deprecated By JDK 6. This method is inherently unsafe. See Thread.stop() for details.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.stop\\(\\)", "Deprecated By JDK 6. This method is inherently unsafe. Stopping a thread with Thread.stop causes it to unlock all of the monitors that it has locked (as a natural consequence of the unchecked ThreadDeath exception propagating up the stack). If any of the objects previously protected by these monitors were in an inconsistent state, the damaged objects become visible to other threads, potentially resulting in arbitrary behavior. Many uses of stop should be replaced by code that simply modifies some variable to indicate that the target thread should stop running. The target thread should check this variable regularly, and return from its run method in an orderly fashion if the variable indicates that it is to stop running. If the target thread waits for long periods (on a condition variable, for example), the interrupt method should be used to interrupt the wait. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.stop\\(Throwable\\)", "Deprecated By JDK 6. This method is inherently unsafe. See Thread.stop() for details. An additional danger of this method is that it may be used to generate exceptions that the target thread is unprepared to handle (including checked exceptions that the thread could not possibly throw, were it not for this method). For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.ThreadGroup.suspend\\(\\)", "Deprecated By JDK 6. This method is inherently deadlock-prone. See Thread.suspend() for details.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.lang.Thread.suspend\\(\\)", "Deprecated By JDK 6. This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling resume, deadlock results. Such deadlocks typically manifest themselves as \"frozen\" processes. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.toGMTString\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by DateFormat.format(Date date), using a GMT TimeZone.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.toLocaleString\\(\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by DateFormat.format(Date date).", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Operation.toString\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.toString\\(\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.io.ByteArrayOutputStream.toString\\(int\\)", "Deprecated By JDK 6. This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the toString(String enc) method, which takes an encoding-name argument, or the toString() method, which uses the platform's default character encoding.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.io.File.toURL\\(\\)", "Deprecated By JDK 6. This method does not automatically escape characters that are illegal in URLs. It is recommended that new code convert an abstract pathname into a URL by first converting it into a URI, via the toURI method, and then converting the URI into a URL via the URI.toURL method.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.plaf.metal.MetalScrollPaneUI.uninstallListeners\\(JScrollPane\\)", "Deprecated By JDK 6. Replaced by MetalScrollPaneUI.uninstallListeners(JComponent)", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.util.Date.UTC\\(int, int, int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(year + 1900, month, date, hrs, min, sec) or GregorianCalendar(year + 1900, month, date, hrs, min, sec), using a UTC TimeZone, followed by Calendar.getTime().getTime().", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.validate\\(Object\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.xml.bind.Validator.validateRoot\\(Object\\)", "Deprecated By JDK 6. since JAXB2.0", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.text.View.viewToModel\\(float, float, Shape\\)", "Deprecated By JDK 6. ", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.portable.OutputStream.write_Principal(Principal)", "Deprecated By JDK 6. Deprecated by CORBA 2.2.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.write\\(byte\\[\\], int, int\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.LogStream.write\\(int\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.io.ObjectOutputStream.PutField.write\\(ObjectOutput\\)", "Deprecated By JDK 6. This method does not write the values contained by this PutField object in a proper format, and may result in corruption of the serialization stream. The correct way to write PutField data is by calling the ObjectOutputStream.writeFields() method.", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "java.io.DataInputStream.readLine\\(\\)", "<![CDATA[\n" + 
            "            Deprecated By JDK 6. \n" + 
            "            This method does not properly convert bytes to characters. As of JDK 1.1, the preferred way to read lines of text is via the BufferedReader.readLine() method. Programs that use the DataInputStream class to read lines can be converted to use the BufferedReader class by replacing code of the form:\n" + 
            "            ```java\n" + 
            "               DataInputStream d = new DataInputStream(in);\n" + 
            "            with:\n" + 
            "             BufferedReader d\n" + 
            "                  = new BufferedReader(new InputStreamReader(in));\n" + 
            "            ```\n" + 
            "            ]]>", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.swing.JComponent.reshape\\(int, int, int, int\\)", "<![CDATA[\n" + 
            "            Deprecated By JDK 6. \n" + 
            "            As of JDK 5, replaced by Component.setBounds(int, int, int, int).\n" + 
            "            Moves and resizes this component.\n" + 
            "            ]]>", 0, Types.add(TypeReferenceLocation.METHOD)));
        hints.add(new BlackListRegex(getID(), "javax.management.AttributeValueExp\\(\\)", "Deprecated By JDK 6. An instance created with this constructor cannot be used in a query.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.sql.Date\\(int, int, int\\)", "Deprecated By JDK 6. instead use the constructor Date(long date)", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.util.Date\\(int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(year + 1900, month, date) or GregorianCalendar(year + 1900, month, date).", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.util.Date\\(int, int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(year + 1900, month, date, hrs, min) or GregorianCalendar(year + 1900, month, date, hrs, min).", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.util.Date\\(int, int, int, int, int, int\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by Calendar.set(year + 1900, month, date, hrs, min, sec) or GregorianCalendar(year + 1900, month, date, hrs, min, sec).", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.util.Date\\(java.lang.String\\)", "Deprecated By JDK 6. As of JDK version 1.1, replaced by DateFormat.parse(String s).", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.awt.event.KeyEvent\\(java.awt.Component, int, long, int, int\\)", "Deprecated By JDK 6. as of JDK1.1", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.Operation\\(java.lang.String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.rmi.RMISecurityException\\(java.lang.String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.rmi.RMISecurityException\\(java.lang.String, java.lang.String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.rmi.ServerRuntimeException\\(java.lang.String, java.lang.Exception\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.rmi.server.SkeletonMismatchException\\(java.lang.String\\)", "Deprecated By JDK 6. no replacement", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.net.Socket\\(java.net.InetAddress, int, boolean\\)", "Deprecated By JDK 6. Use DatagramSocket instead for UDP transport.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.net.Socket\\(java.lang.String, int, boolean\\)", "Deprecated By JDK 6. Use DatagramSocket instead for UDP transport.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.lang.String\\(byte\\[\\], int\\)", "Deprecated By JDK 6. This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the String constructors that take a Charset, charset name, or that use the platform's default charset.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.lang.String\\(byte\\[\\], int, int, int\\)", "Deprecated By JDK 6. This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the String constructors that take a Charset, charset name, or that use the platform's default charset.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "org.omg.CORBA.TCKind\\(int\\)", "Deprecated By JDK 6. Do not use this constructor as this method should be private according to the OMG specification. Use TCKind.from_int(int) instead.", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.sql.Time\\(int, int, int\\)", "Deprecated By JDK 6. Use the constructor that takes a milliseconds value in place of this constructor", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.sql.Timestamp\\(int, int, int, int, int, int, int\\)", "Deprecated By JDK 6. instead use the constructor Timestamp(long millis)", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "java.io.StreamTokenizer\\(java.io.InputStream\\)", "<![CDATA[\n" + 
            "                 Deprecated By JDK 6 - As of JDK version 1.1, the preferred way to tokenize an input stream is to convert it into a character stream, for example:\n" + 
            "    \n" + 
            "                ```java\n" + 
            "                    Reader r = new BufferedReader(new InputStreamReader(is));\n" + 
            "                    StreamTokenizer st = new StreamTokenizer(r);\n" + 
            "                ```\n" + 
            "            ]]>", 0, Types.add(TypeReferenceLocation.CONSTRUCTOR_CALL)));
        hints.add(new BlackListRegex(getID(), "javax.jws.HandlerChain.name", "Deprecated By JDK 6. As of JSR-181 2.0 with no replacement.", 0, Types.add(TypeReferenceLocation.TYPE))); 
        
        Configuration configuration = ConfigurationBuilder.begin()
            .addRule().perform(new JavaScanner().add(classifications).add(hints));
        return configuration;
    }
    // @formatter:on
}
