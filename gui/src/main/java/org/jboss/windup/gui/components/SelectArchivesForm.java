package org.jboss.windup.gui.components;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.swing.JPanel;

import org.jboss.windup.exec.configuration.WindupConfiguration;
import org.jboss.windup.gui.services.InputScanner;
import org.jboss.windup.util.ZipUtil;

/**
 * Panel for selecting which archives to process and which to ignore.
 *
 * @author jsightler <jesse.sightler@gmail.com>
 */
public class SelectArchivesForm extends JPanel implements WizardStep
{
    private static final long serialVersionUID = 1L;
    private IncludeExcludePickList includeExcludeFilesPickList;
    private WindupConfiguration configuration;

    /**
     * Creates new form SelectArchivesForm
     */
    public SelectArchivesForm()
    {
        initComponents();
    }

    private void loadComponentData()
    {
        Path inputPath = configuration.getInputPath();
        this.includeExcludeFilesPickList.setDisplayIncludeList(false);
        if (inputPath != null && Files.exists(inputPath))
        {
            InputScanner scanner = new InputScanner(inputPath);
            Collection<String> paths = scanner.findPaths();
            List<String> pathsRelativeAndArchivesOnly = new ArrayList<>();
            for (String path : paths)
            {
                if (ZipUtil.endsWithZipExtension(path))
                {
                    path = path.substring(configuration.getInputPath().toString().length());
                    if (path.length() > 1)
                    {
                        path = path.substring(1); // remove leading path char
                        pathsRelativeAndArchivesOnly.add(path);
                    }
                }
            }
            includeExcludeFilesPickList.setAvailableItems(pathsRelativeAndArchivesOnly);
            includeExcludeFilesPickList.setAllListDescription("All Files");
            includeExcludeFilesPickList.setIncludeListDescription("Selected Files To Scan");
            includeExcludeFilesPickList.setExcludeListDescription("Selected Files To Exclude");
        }
    }

    @Override
    public void init(WindupConfiguration cfg)
    {
        this.configuration = cfg;
        loadComponentData();
    }

    @Override
    public boolean validateStep()
    {
        return true;
    }

    @Override
    public void stepComplete()
    {
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()
    {

        includeExcludeFilesPickList = new org.jboss.windup.gui.components.IncludeExcludePickList();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(includeExcludeFilesPickList, javax.swing.GroupLayout.DEFAULT_SIZE,
                                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    );
        layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(includeExcludeFilesPickList, javax.swing.GroupLayout.DEFAULT_SIZE,
                                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    );
    }
}
