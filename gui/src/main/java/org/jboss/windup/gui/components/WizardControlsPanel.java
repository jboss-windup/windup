package org.jboss.windup.gui.components;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;

/**
 * Provides a basic set of Wizard-like controls (previous, next, finish).
 * 
 * @author jsightler
 */
public class WizardControlsPanel extends javax.swing.JPanel
{
    private static final long serialVersionUID = 1L;

    private JButton finishButton;
    private JButton nextButton;
    private JButton previousButton;
    private List<WizardActionListener> wizardActionListeners = new ArrayList<>();

    /**
     * Creates new form WizardControlsPanel
     */
    public WizardControlsPanel()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()
    {

        finishButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        finishButton.setText("Finish");
        finishButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                finishButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                previousButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addContainerGap(217, Short.MAX_VALUE)
                                            .addComponent(previousButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(nextButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(finishButton)
                                            .addContainerGap())
                    );
        layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                            .addContainerGap(13, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(previousButton)
                                                        .addComponent(nextButton)
                                                        .addComponent(finishButton))
                                            .addContainerGap())
                    );
    }

    public void addWizardActionListener(WizardActionListener listener)
    {
        wizardActionListeners.add(listener);
    }

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt)
    {
        WizardActionEvent event = new WizardActionEvent(this, evt.getID(), WizardActionEvent.COMMAND_FINISH);
        for (WizardActionListener listener : wizardActionListeners)
        {
            listener.wizardActionPerformed(event);
        }
    }

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt)
    {
        WizardActionEvent event = new WizardActionEvent(this, evt.getID(), WizardActionEvent.COMMAND_NEXT);
        for (WizardActionListener listener : wizardActionListeners)
        {
            listener.wizardActionPerformed(event);
        }
    }

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt)
    {
        WizardActionEvent event = new WizardActionEvent(this, evt.getID(), WizardActionEvent.COMMAND_PREVIOUS);
        for (WizardActionListener listener : wizardActionListeners)
        {
            listener.wizardActionPerformed(event);
        }
    }

    public void setPreviousEnabled(boolean enabled)
    {
        previousButton.setEnabled(enabled);
    }

    public void setNextEnabled(boolean enabled)
    {
        nextButton.setEnabled(enabled);
    }

    public void setFinishEnabled(boolean enabled)
    {
        finishButton.setEnabled(enabled);
    }
}
