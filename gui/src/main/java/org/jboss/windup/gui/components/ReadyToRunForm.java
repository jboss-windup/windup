package org.jboss.windup.gui.components;

import javax.swing.JLabel;
import javax.swing.JPanel;

import org.jboss.windup.exec.configuration.WindupConfiguration;

/**
 * Panel that indicates everything is configured and the system is ready to run.
 * 
 * @author jsightler
 */
public class ReadyToRunForm extends JPanel implements WizardStep
{
    private static final long serialVersionUID = 1L;
    private JLabel readyHeaderLabel;

    /**
     * Creates the form
     */
    public ReadyToRunForm()
    {
        initComponents();
    }

    @Override
    public boolean validateStep()
    {
        return true;
    }

    @Override
    public void init(WindupConfiguration cfg)
    {

    }

    @Override
    public void stepComplete()
    {

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()
    {

        readyHeaderLabel = new javax.swing.JLabel();

        readyHeaderLabel.setText("<html><p>Windup is Ready to Run!</p><p>Click Finish to start!</p></html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(readyHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    );
        layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout
                                            .createSequentialGroup()
                                            .addComponent(readyHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 253, Short.MAX_VALUE))
                    );
    }

}
